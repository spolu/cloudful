
if(!window.CF){CF={_logging:true,copy:function(target,source,overwrite,transform){var key;for(key in source){if(overwrite||typeof target[key]==='undefined'){target[key]=transform?transform(source[key]):source[key];}}
return target;},ns:function(path,obj,overwrite){var parts=path?path.split('.'):[];if(parts[0]==='CF')
parts=parts.slice(1);if(parts.length===0||(parts.length===1&&parts[0]===''))
throw new Error("CF: can't provide CF itself");var node=window.CF;for(var i=0;i<parts.length-1;i++){var n={};n[parts[i]]={};CF.copy(node,n,false);node=node[parts[i]];}
var n={};n[parts[i]]=obj;CF.copy(node,n,overwrite);return node[parts[i]];},method:function(that,name,method,_super){if(_super){var m=that[name];_super[name]=function(){return m.apply(that,arguments);};}
that[name]=method;},getter:function(that,name,obj,prop){var getter=function(){return obj[prop];};that[name]=getter;},setter:function(that,name,obj,prop){var setter=function(arg){obj[prop]=arg;return that;};that['set'+name.substring(0,1).toUpperCase()+name.substring(1)]=setter;},responds:function(that,name){return(that[name]&&typeof that[name]==='function');},$:function(id){return document.getElementById(id);},guid:function(){var res='',i,j;for(j=0;j<32;j++){i=Math.floor(Math.random()*16).toString(16).toUpperCase();res+=i;}
return res;},log:function(str){if(CF._logging&&typeof console!=='undefined'&&typeof console.log!=='undefined'){console.log(str);}}}}
CF.ns('Array.indexOf',function(arr,item){if(arr.indexOf){return arr.indexOf(item);}
var length=arr.length;if(length){for(var index=0;index<length;index++){if(arr[index]===item){return index;}}}
return-1;});CF.ns('Array.merge',function(target,source){for(var i=0;i<source.length;i++){if(FB.Array.indexOf(target,source[i])<0){target.push(source[i]);}}
return target;});CF.ns('Array.forEach',function(item,fn,proto){if(!item){return;}
if(Object.prototype.toString.apply(item)==='[object Array]'||(!(item instanceof Function)&&typeof item.length=='number')){if(item.forEach){item.forEach(fn);}else{for(var i=0,l=item.length;i<l;i++){fn(item[i],i,item);}}}else{for(var key in item){if(proto||item.hasOwnProperty(key)){fn(item[key],key,item);}}}});CF.ns('Array.remove',function(arr,e){for(var i=0;i<arr.length;i++){if(e===arr[i]){arr.splice(i,1);i--;}}});CF.ns('Function.once',function(fn){var done=false;return function(){if(!done){args=Array.prototype.slice.call(arguments);done=true;fn.apply(null,args);}};});CF.ns('Function.once',function(fn){args=Array.prototype.slice.call(arguments);object=args.shift();return function(){return fn.apply(object,args.concat(Array.prototype.slice.call(arguments)));};});CF.ns('Helper.vcomp',function(v1,v2){if(v1==v2)
return 0;function vnorm(v){return $.map(v.split('.'),function(value,index){return parseInt(value,10);});}
var a1=vnorm(1);var a2=vnorm(2);var len=Math.max(a1.length,a2.length);for(var i=0;i<len;i++){a1[i]=a1[i]||0;a2[i]=a2[i]||0;if(a1[i]==a2[i]){continue;}
return a1[i]>a2[i]?1:-1;}
return 0;});
CF.ns('xdr.call',function(){if(!CF.xdr._caller){CF.ns('xdr._caller',CF.xdr.caller({}));}
CF.xdr._caller.call.apply(this,arguments);});CF.ns('xdr.caller',function(spec,my){my=my||{};var _super={};my.CHANNELS=['CORS','JSONP','FLASH'];my.METHODS=['get','post','delete','put'];var call;var that={};call=function(options){CF.log('call: '+JSON.stringify(options));};CF.method(that,'call',call);return that;});
CF.ns('emitter',function(spec,my){my=my||{};var _super={};my.handlers={};var on;var emit;var off;var that={};on=function(type,handler){if(typeof handler==='function'){my.handlers[type]=my.handlers[type]||[];my.handlers[type].push(handler);}
else{throw new Error('CF.emitter: not a function');}};emit=function(){var args=Array.prototype.slice.call(arguments);var name=args.shift();CF.Array.forEach(my.handlers[name],function(sub){if(sub){sub.apply(this,args);}});};off=function(type,handler){CF.Array.remove(my.handlers[type],handler);};CF.method(that,'on',on);CF.method(that,'emit',emit);CF.method(that,'off',off);CF.getter(that,'handlers',my,'handlers');return that;});
CF.ns('init',function(options){options=CF.copy(options||{},{logging:true});if(!options.logging&&window.location.toString().indexOf('cf_debug=1')<0){CF._logging=false;}
if(typeof $==='undefined'||typeof $.fn==='undefined'||CF.Helper.vcomp('1.7',$.fn.jquery)){throw new Error('jQuery >= 1.7 required');}});